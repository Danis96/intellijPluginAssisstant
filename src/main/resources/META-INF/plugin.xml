<idea-plugin>
    <id>org.example.aiassistant</id>
    <name>Genie AI Assistant</name>
    <vendor email="you@example.com">SQA Consulting</vendor>

    <description><![CDATA[
      Genie AI Assistant is a sophisticated IntelliJ IDEA plugin that integrates AI-powered coding assistance directly into the IDE through a dedicated tool window.<br/>
      Built with Kotlin, it provides developers with an intelligent companion for coding tasks, code explanations, and development guidance.<br/><br/>
      
      <b>Key Features:</b><br/><br/>
      
      üîê <b>Secure Authentication</b><br/>
      ‚Ä¢ Token-based authentication with bearer authorization<br/>
      ‚Ä¢ OS-level secure storage using IntelliJ's PasswordSafe<br/>
      ‚Ä¢ Async token validation against configurable endpoints<br/><br/>
      
      üé® <b>Modern User Interface</b><br/>
      ‚Ä¢ Professional tool window with distinguished prompt input area<br/>
      ‚Ä¢ Adaptive light/dark theme support with custom color schemes<br/>
      ‚Ä¢ Real-time character counting and visual feedback<br/>
      ‚Ä¢ Interactive buttons with hover effects and modern styling<br/><br/>
      
      üí¨ <b>Smart Chat Experience</b><br/>
      ‚Ä¢ Timestamped conversation history with emoji categorization<br/>
      ‚Ä¢ Placeholder text guidance and keyboard shortcuts<br/>
      ‚Ä¢ Progress indicators and loading states for better UX<br/>
      ‚Ä¢ Message formatting with user/assistant/error/info types<br/><br/>
      
      ‚öôÔ∏è <b>Seamless IDE Integration</b><br/>
      ‚Ä¢ Right-side tool window that cannot be closed<br/>
      ‚Ä¢ Settings panel integration in IDE preferences<br/>
      ‚Ä¢ Tools menu action for quick access<br/>
      ‚Ä¢ Balloon notifications for user alerts and warnings<br/><br/>
      
      üåê <b>Network Communication</b><br/>
      ‚Ä¢ Modern HTTP client for API communication<br/>
      ‚Ä¢ JSON payload handling with injection prevention<br/>
      ‚Ä¢ Configurable endpoints for authentication and chat APIs<br/>
      ‚Ä¢ Comprehensive error handling and fallback mechanisms<br/><br/>
      
      üöÄ <b>Performance & Architecture</b><br/>
      ‚Ä¢ Asynchronous operations to prevent UI blocking<br/>
      ‚Ä¢ Project-scoped instances with proper lifecycle management<br/>
      ‚Ä¢ DumbAware implementation for IDE indexing compatibility<br/>
      ‚Ä¢ Memory-efficient with proper resource disposal<br/><br/>
      
      The plugin requires Java 17+ and targets IntelliJ IDEA 2024.2+, making it suitable for modern development environments.<br/>
      It's designed for organizations wanting to integrate custom AI backends into their development workflow with enterprise-grade security and professional UI standards.
    ]]></description>

    <change-notes><![CDATA[
      1.0.0:
      - Initial release with Tool Window, secure token storage, and token verification.
    ]]></change-notes>

    <idea-version since-build="241"/>

    <depends>com.intellij.modules.platform</depends>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="Genie AI Assistant"
                    anchor="right"
                    factoryClass="com.example.aiassistant.toolwindow.AIAssistantToolWindowFactory"
                    icon="/icons/ai.png"
                    canCloseContent="false"/>
        <applicationConfigurable instance="com.example.aiassistant.settings.AIAssistantConfigurable"
                                 id="ai.assistant.settings"
                                 displayName="Genie AI Assistant"/>
        <notificationGroup id="Genie AI Assistant Notifications" displayType="BALLOON" isLogByDefault="true"/>
    </extensions>

    

     <actions>
         <action id="AIAssistant.OpenToolWindow"
                 class="com.example.aiassistant.actions.OpenAIAssistantAction"
                 text="Open Genie AI Assistant"
                 icon="/icons/ai.png"
                 description="Open the Genie AI Assistant tool window">
             <add-to-group group-id="ToolsMenu" anchor="last"/>
         </action>

        <group id="AIAssistant.CheckCodeGroup"
               class="com.intellij.openapi.actionSystem.DefaultActionGroup"
               text="Genie Assistant"
               popup="true"
               icon="/icons/ai.png">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>

            <action id="AIAssistant.Undersection1"
                    class="com.example.aiassistant.actions.Undersection1Action"
                    text="UNDERSECTION1"
                    description="Send selected code to Genie with template 1"
                    />

            <action id="AIAssistant.Undersection2"
                    class="com.example.aiassistant.actions.Undersection2Action"
                      text="UNDERSECTION2"
                    description="Send selected code to Genie with template 2"
                   />

            <action id="AIAssistant.CheckCodeInAssistant"
                    class="com.example.aiassistant.actions.CheckCodeInAssistantAction"
                    text="Check code with Genie"
                    description="Send selected code to Genie AI Assistant with a prepared prompt"
                    />
        </group>
     </actions>
</idea-plugin>